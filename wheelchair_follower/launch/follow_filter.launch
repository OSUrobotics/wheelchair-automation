<launch>
<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter_dist">
    <remap from="/scan" to="/scan_multi" />
    <remap from="scan_filtered" to="/scan_follower_filtered_dist"/>
<!--<remap from="scan_filtered" to="/scan_multi"/>-->
    <rosparam command="load" file="$(find wheelchair_follower)/follower_filter_dist.yaml" />
</node>

<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter_range">
    <remap from="/scan" to="/scan_follower_filtered_dist" />
    <remap from="scan_filtered" to="/scan_follower_filtered"/>
<!--<remap from="scan_filtered" to="/scan_multi"/>-->
    <rosparam command="load" file="$(find wheelchair_follower)/follower_filter_ang.yaml" />
</node>

<node pkg="leg_detector" type="leg_detector" name="leg_detector" args="scan:=base_scan $(find leg_detector)/config/trained_leg_detector.yaml" output="screen">
 <remap from ="scan" to ="scan_follower_filtered"/>
 <param name="use_sim_time" value="False"/>
 <param name="fixed_frame" value="base_footprint"/>
 <param name="leg_reliability_limit" value=".50"/>
 <!-- <param name="no_observation_timeout" value=".8"/> -->
 <param name="min_points_per_group" value="8"/>
 <!-- <param name="connection_threshold" value=".8"/> -->

</node>

<!-- <node pkg="wheelchair_follower" type="mouse_follow.py" name="mouse_follow"/> -->

</launch>
